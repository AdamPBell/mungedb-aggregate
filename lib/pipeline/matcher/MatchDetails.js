"use strict"



// Autogenerated by cport.py on 2013-09-17 14:37
var MatchDetails = module.exports = function (){

}, klass = MatchDetails, base =  Object  , proto = klass.prototype = Object.create(base.prototype, {constructor:{value:klass}});


// File: match_details.h lines: 60-60
//         boost::scoped_ptr<std::string> _elemMatchKey;

proto._elemMatchKey = undefined;


// File: match_details.h lines: 59-59
//         bool _elemMatchKeyRequested;

proto._elemMatchKeyRequested = undefined;


// File: match_details.h lines: 58-58
//         bool _loadedRecord;

proto._loadedRecord = undefined;


// File: match_details.h lines: 60-60
//         boost::scoped_ptr<std::string> _elemMatchKey;

proto._elemMatchKey = undefined;


// File: match_details.h lines: 59-59
//         bool _elemMatchKeyRequested;

proto._elemMatchKeyRequested = undefined;


// File: match_details.h lines: 58-58
//         bool _loadedRecord;

proto._loadedRecord = undefined;





/**
 * 
 * This documentation was automatically generated. Please update when you touch this function.
 * @method MatchDetails
 * @param
 *
 */
proto.MatchDetails = function MatchDetails( /*  */ ){

// File: match_details.cpp lines: 27-29
//     MatchDetails::MatchDetails() :
//         _elemMatchKeyRequested() {
//         resetOutput();
//     }



}


/**
 * 
 * This documentation was automatically generated. Please update when you touch this function.
 * @method elemMatchKey
 * @param
 *
 */
proto.elemMatchKey = function elemMatchKey( /*  */ ){

// File: match_details.cpp lines: 41-43
//     std::string MatchDetails::elemMatchKey() const {
//         verify( hasElemMatchKey() );
//         return *(_elemMatchKey.get());
//     }



}


/**
 * 
 * This documentation was automatically generated. Please update when you touch this function.
 * @method hasElemMatchKey
 * @param
 *
 */
proto.hasElemMatchKey = function hasElemMatchKey( /*  */ ){

// File: match_details.cpp lines: 37-38
//     bool MatchDetails::hasElemMatchKey() const {
//         return _elemMatchKey.get();
//     }



}


/**
 * 
 * This documentation was automatically generated. Please update when you touch this function.
 * @method hasLoadedRecord
 * @param
 *
 */
proto.hasLoadedRecord = function hasLoadedRecord( /*  */ ){
// File: match_details.h lines: 41-40
//         bool hasLoadedRecord() const { return _loadedRecord; }




}


/**
 * 
 * This documentation was automatically generated. Please update when you touch this function.
 * @method needRecord
 * @param
 *
 */
proto.needRecord = function needRecord( /*  */ ){
// File: match_details.h lines: 45-44
//         bool needRecord() const { return _elemMatchKeyRequested; }




}


/**
 * 
 * This documentation was automatically generated. Please update when you touch this function.
 * @method requestElemMatchKey
 * @param
 *
 */
proto.requestElemMatchKey = function requestElemMatchKey( /*  */ ){
// File: match_details.h lines: 50-49
//         void requestElemMatchKey() { _elemMatchKeyRequested = true; }




}


/**
 * 
 * This documentation was automatically generated. Please update when you touch this function.
 * @method resetOutput
 * @param
 *
 */
proto.resetOutput = function resetOutput( /*  */ ){

// File: match_details.cpp lines: 32-34
//     void MatchDetails::resetOutput() {
//         _loadedRecord = false;
//         _elemMatchKey.reset();
//     }



}


/**
 * 
 * This documentation was automatically generated. Please update when you touch this function.
 * @method setElemMatchKey
 * @param
 *
 */
proto.setElemMatchKey = function setElemMatchKey( /*  const std::string &elemMatchKey  */ ){

// File: match_details.cpp lines: 46-49
//     void MatchDetails::setElemMatchKey( const std::string &elemMatchKey ) {
//         if ( _elemMatchKeyRequested ) {
//             _elemMatchKey.reset( new std::string( elemMatchKey ) );
//         }
//     }



}


/**
 * 
 * This documentation was automatically generated. Please update when you touch this function.
 * @method setLoadedRecord
 * @param
 *
 */
proto.setLoadedRecord = function setLoadedRecord( /*  bool loadedRecord  */ ){
// File: match_details.h lines: 39-38
//         void setLoadedRecord( bool loadedRecord ) { _loadedRecord = loadedRecord; }




}


/**
 * 
 * This documentation was automatically generated. Please update when you touch this function.
 * @method toString
 * @param
 *
 */
proto.toString = function toString( /*  */ ){

// File: match_details.cpp lines: 52-57
//     string MatchDetails::toString() const {
//         std::stringstream ss;
//         ss << "loadedRecord: " << _loadedRecord << " ";
//         ss << "elemMatchKeyRequested: " << _elemMatchKeyRequested << " ";
//         ss << "elemMatchKey: " << ( _elemMatchKey ? _elemMatchKey->c_str() : "NONE" ) << " ";
//         return ss.str();
//     }



}