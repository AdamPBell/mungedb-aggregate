"use strict"



// Autogenerated by cport.py on 2013-09-17 14:37
var SimpleArrayElementIterator = module.exports = function (){

}, klass = SimpleArrayElementIterator, base =  Object  , proto = klass.prototype = Object.create(base.prototype, {constructor:{value:klass}});


// File: path.h lines: 101-101
//         BSONObjIterator _iterator;

proto._iterator = undefined;


// File: path.h lines: 100-100
//         bool _returnArrayLast;

proto._returnArrayLast = undefined;


// File: path.h lines: 99-99
//         BSONElement _theArray;

proto._theArray = undefined;


// File: path.h lines: 101-101
//         BSONObjIterator _iterator;

proto._iterator = undefined;


// File: path.h lines: 100-100
//         bool _returnArrayLast;

proto._returnArrayLast = undefined;


// File: path.h lines: 99-99
//         BSONElement _theArray;

proto._theArray = undefined;





/**
 * 
 * This documentation was automatically generated. Please update when you touch this function.
 * @method SimpleArrayElementIterator
 * @param
 *
 */
proto.SimpleArrayElementIterator = function SimpleArrayElementIterator( /*  const BSONElement& theArray, bool returnArrayLast  */ ){

// File: path.cpp lines: 52-54
//     SimpleArrayElementIterator::SimpleArrayElementIterator( const BSONElement& theArray, bool returnArrayLast )
//         : _theArray( theArray ), _returnArrayLast( returnArrayLast ), _iterator( theArray.Obj() ) {
// 
//     }



}


/**
 * 
 * This documentation was automatically generated. Please update when you touch this function.
 * @method more
 * @param
 *
 */
proto.more = function more( /*  */ ){

// File: path.cpp lines: 57-58
//     bool SimpleArrayElementIterator::more() {
//         return _iterator.more() || _returnArrayLast;
//     }



}


/**
 * 
 * This documentation was automatically generated. Please update when you touch this function.
 * @method next
 * @param
 *
 */
proto.next = function next( /*  */ ){

// File: path.cpp lines: 61-70
//     ElementIterator::Context SimpleArrayElementIterator::next() {
//         if ( _iterator.more() ) {
//             Context e;
//             e.reset( _iterator.next(), BSONElement(), false );
//             return e;
//         }
//         _returnArrayLast = false;
//         Context e;
//         e.reset( _theArray, BSONElement(), true );
//         return e;
//     }



}