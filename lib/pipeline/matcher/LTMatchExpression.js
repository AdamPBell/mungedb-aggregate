"use strict"



// Autogenerated by cport.py on 2013-09-17 14:37
var LTMatchExpression = module.exports = function (){

}, klass = LTMatchExpression, base =  Object  , proto = klass.prototype = Object.create(base.prototype, {constructor:{value:klass}});





/**
 * 
 * This documentation was automatically generated. Please update when you touch this function.
 * @method LTMatchExpression
 * @param
 *
 */
proto.LTMatchExpression = function LTMatchExpression( /*  LT  */ ){
// File: expression_leaf.h lines: 118-117
//         LTMatchExpression() : ComparisonMatchExpression( LT ){}




}


/**
 * 
 * This documentation was automatically generated. Please update when you touch this function.
 * @method shallowClone
 * @param
 *
 */
proto.shallowClone = function shallowClone( /*  */ ){
// File: expression_leaf.h lines: 119-122
//         virtual LeafMatchExpression* shallowClone() const {
//             ComparisonMatchExpression* e = new LTMatchExpression();
//             e->init( path(), _rhs  );
//             return e;
//         }




}