"use strict";



// Autogenerated by cport.py on 2013-09-17 14:37
var Context = module.exports = function (){

}, klass = Context, base =  Object  , proto = klass.prototype = Object.create(base.prototype, {constructor:{value:klass}});


// File: path.h lines: 62-62
//             BSONElement _arrayOffset;

proto._arrayOffset = undefined;


// File: path.h lines: 61-61
//             BSONElement _element;

proto._element = undefined;


// File: path.h lines: 63-63
//             bool _outerArray;

proto._outerArray = undefined;


// File: path.h lines: 62-62
//             BSONElement _arrayOffset;

proto._arrayOffset = undefined;


// File: path.h lines: 61-61
//             BSONElement _element;

proto._element = undefined;


// File: path.h lines: 63-63
//             bool _outerArray;

proto._outerArray = undefined;





/**
 * 
 * This documentation was automatically generated. Please update when you touch this function.
 * @method arrayOffset
 *
 */
proto.arrayOffset = function arrayOffset( ){
// File: path.h lines: 57-56
	return this._arrayOffset;
};


/**
 * 
 * This documentation was automatically generated. Please update when you touch this function.
 * @method element
 *
 */
proto.element = function element( ){
// File: path.h lines: 56-55
	return this._element;
};


/**
 * 
 * This documentation was automatically generated. Please update when you touch this function.
 * @method outerArray
 * @param
 *
 */
proto.outerArray = function outerArray( ){
// File: path.h lines: 58-57
	return this._outerArray;
};


/**
 * 
 * This documentation was automatically generated. Please update when you touch this function.
 * @method reset
 * @param
 *
 */
proto.reset = function reset( ){
// File: path.cpp lines: 37-38
	this._element = new BSONElement();
};


/**
 * 
 * This documentation was automatically generated. Please update when you touch this function.
 * @method setArrayOffset
 * @param
 *
 */
proto.setArrayOffset = function setArrayOffset( e ){
// File: path.h lines: 54-53
	this._arrayOffset = e;
};


